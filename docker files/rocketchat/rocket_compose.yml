# Based on https://github.com/RocketChat/Rocket.Chat/blob/develop/docker-compose.yml
version: "3.8"

services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:latest
    container_name: rocketchat
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./rocketchat/uploads:/app/uploads
    environment:
      PORT: '3000'
      # ROOT URL must match the domain that Rocketchat is accessed through
      ROOT_URL: 'https://rocketchat.mydomain.local'
      MONGO_URL: 'mongodb://mongo:27017/rocketchat'
      MONGO_OPLOG_URL: 'mongodb://mongo:27017/local'
      Accounts_UseDNSDomainCheck: 'False'
      ADMIN_USERNAME: 'rc_admin'
      # Change to respective domain
      ADMIN_EMAIL: 'rc_admin@rocketchat.mydomain.local'
      # Set a better password
      ADMIN_PASS: 'admin'
      # This skips the Setup Wizard. Can remove to start the Setup Wizard
      OVERWRITE_SETTING_Show_Setup_Wizard: 'completed'
    depends_on:
      - mongo
    expose:
      - '3000'
    # Expose ports without publishing them to the host machine - theyâ€™ll only be accessible to linked services. Only the internal port can be specified.
    # uncomment the ports section to allow rocketchat to be accessible on the host machine 
    # ports:
    #  - "3000:3000"

  mongo:
    image: mongo:4.0
    container_name: mongo
    restart: unless-stopped
    volumes:
     - ./rocketchat/data/db:/data/db
     #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'mongo:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo